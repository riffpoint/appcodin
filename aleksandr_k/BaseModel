public class BaseModel {

    protected Observable.Transformer mSchedulersTransformer;
    protected Context mContext;

    public BaseModel() {
        mContext = App.getAppContext();
        mSchedulersTransformer = new Observable.Transformer() {
            @Override
            public Object call(Object o) {
                return ((Observable) o)
                        .subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread());
            }
        };
    }

    protected <T> Observable.Transformer<T, T> applySchedulers() {
        return (Observable.Transformer<T, T>) mSchedulersTransformer;
    }
}

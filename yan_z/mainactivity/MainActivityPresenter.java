import android.content.Context;
import android.support.design.widget.TabLayout;
import android.util.Log;
import android.widget.Toast;

import com.app.lexicontrainer.AppConstants;
import com.app.lexicontrainer.Model.Data.DBWrapper;
import com.app.lexicontrainer.Model.Data.FireBaseManager;
import com.app.lexicontrainer.Model.Data.LocalData;
import com.app.lexicontrainer.Model.Subunit;
import com.app.lexicontrainer.Model.Unit;
import com.app.lexicontrainer.R;
import com.app.lexicontrainer.ui.events.SubunitSelectedEvent;
import com.app.lexicontrainer.ui.events.UnitSelectedEvent;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;

import java.util.List;

import javax.inject.Inject;

public class MainActivityPresenter implements MainActivityContract.Presenter, LocalData.ISubunitChangesListener, LocalData.IUnitChangesListener {

    private MainActivityContract.View m_View;
    @Inject
    DBWrapper m_Db;
    @Inject
    FireBaseManager m_FireBaseManager;
    private Context m_Context;
    private Unit m_Unit;
    private Subunit m_Subunit;
    private Toast m_Toast;



    @Inject
    public MainActivityPresenter(MainActivityContract.View view, Context context) {
        m_View = view;
        m_Context = context;
    }

    @Inject
    public void setListeners(){
        m_Db.addSubunitChangesListener(this);
        m_Db.addUnitChangesListener(this);
    }



    @Subscribe
    public void onUnitselected(UnitSelectedEvent event){
        if(event!=null && event.getUnit()!=null){
            m_Unit = event.getUnit();
            m_View.setSubunitsTab(event.getUnit());
        }
    }

    @Subscribe
    public void onSubunitSelected(SubunitSelectedEvent event){
        m_Subunit = event.getSubunit();
        m_View.setCardsTab(event.getSubunit());
        if(event!=null && event.getSubunit()!=null){

        }
    }

    @Override
    public void onStart() {
        EventBus.getDefault().register(this);

    }

    @Override
    public void onStop() {
        EventBus.getDefault().unregister(this);
    }

    @Override
    public void synchronizeData() {
        List<Unit> units = m_Db.getAllUnits();
        m_FireBaseManager.uploadUnits(units);
    }

    @Override
    public void onTabSelected(TabLayout.Tab tab) {
        if(m_Toast!=null){
            m_Toast.cancel();
        }
        switch (tab.getPosition()){
            case AppConstants.TAB_CARDS_INDEX:
            {
                if(m_Subunit == null){
                    m_Toast = m_View.showToast(m_Context.getString(R.string.please_select_lesson));
                }
            }
            break;
            case AppConstants.TAB_SUBUNITS_INDEX:
            {
                if(m_Unit == null){
                    m_Toast = m_View.showToast(m_Context.getString(R.string.please_select_unit));
                }
            }
            break;
        }
    }

    @Override
    public void onPageSelected(int position) {

    }


    @Override
    public void subunitAdded(Subunit subunit) {
        //Autogenerated
    }

    @Override
    public void subunitDeleted(Subunit subunit) {
        if(m_Subunit!=null && subunit.getId()==m_Subunit.getId()){
            m_Subunit = null;
            m_View.setCardsTab(m_Subunit);

        }
    }

    @Override
    public void subunitRenamed(Subunit subunit) {
        if(m_Subunit!=null && subunit.getId()==m_Subunit.getId()){
            m_Subunit = subunit;
            m_View.setCardsTab(m_Subunit);
        }
    }

    @Override
    public void unitAdded(Unit unit) {
        //Autogenerated
    }

    @Override
    public void unitDeleted(Unit unit) {
        if(m_Unit!=null && unit.getId()==m_Unit.getId()){
            m_Unit = null;
            m_Subunit = null;
            m_View.setSubunitsTab(m_Unit);
            m_View.setCardsTab(m_Subunit);
        }
    }

    @Override
    public void unitRenamed(Unit unit) {
        if(m_Unit!=null && unit.getId()==m_Unit.getId()){
            m_Unit = unit;
            m_View.setSubunitsTab(m_Unit);
        }
    }
}
